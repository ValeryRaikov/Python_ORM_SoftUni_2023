# Generated by Django 4.2.4 on 2023-11-21 07:00

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SchoolStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2, 'First name cannot be less than 2 symbols!'), django.core.validators.MaxLengthValidator(100, 'First name cannot be moe than 100 symbols!')])),
                ('last_name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2, 'Last name cannot be less than 2 symbols!'), django.core.validators.MaxLengthValidator(100, 'Last name cannot be moe than 100 symbols!')])),
                ('identifier_number', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^\\d{9}$', 'Identifier must contain exactly 9 digits!')])),
                ('final_grade', models.DecimalField(decimal_places=1, max_digits=1, validators=[django.core.validators.MinValueValidator(2.0, 'Grade cannot be less than 2.00!'), django.core.validators.MaxValueValidator(6.0, 'Grade cannot be greater than 6.00!')])),
                ('age', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(7, 'Age for school student cannot be less than 7 years!'), django.core.validators.MaxValueValidator(20, 'Age for school students cannot be more than 60 years!')])),
                ('school_year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(8, 'School year cannot be less than 8!'), django.core.validators.MaxValueValidator(12, 'School year cannot be more than 12!')])),
                ('subjects', models.CharField(choices=[('French, English, Maths, Informatics', 'F E M I'), ('French, English, Maths, Geography', 'F E M G'), ('French, English, Bulgarian, History', 'F E B H'), ('French, English, Chemistry, Biology', 'F E C B')], max_length=100)),
                ('description', models.TextField(blank=True, max_length=200, null=True)),
            ],
            options={
                'verbose_name': 'School Student',
                'verbose_name_plural': 'School Students',
                'db_table': 'school_student',
            },
        ),
        migrations.CreateModel(
            name='UniversityStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2, 'First name cannot be less than 2 symbols!'), django.core.validators.MaxLengthValidator(100, 'First name cannot be moe than 100 symbols!')])),
                ('last_name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2, 'Last name cannot be less than 2 symbols!'), django.core.validators.MaxLengthValidator(100, 'Last name cannot be moe than 100 symbols!')])),
                ('identifier_number', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^\\d{9}$', 'Identifier must contain exactly 9 digits!')])),
                ('final_grade', models.DecimalField(decimal_places=1, max_digits=1, validators=[django.core.validators.MinValueValidator(2.0, 'Grade cannot be less than 2.00!'), django.core.validators.MaxValueValidator(6.0, 'Grade cannot be greater than 6.00!')])),
                ('age', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(18, 'Age for university student cannot be less than 18 years!'), django.core.validators.MaxValueValidator(60, 'Age for university students cannot be more than 60 years!')])),
                ('uni_year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1, 'University year cannot be less than 1!'), django.core.validators.MaxValueValidator(6, 'University year cannot be more than 6!')])),
                ('specialty', models.CharField(choices=[('Software Engineering', 'Se'), ('Computer Science', 'Cs'), ('Information Technologies', 'It'), ('Informatics', 'I')], max_length=100)),
                ('disciplines', models.CharField(choices=[('Python programming', 'Python P'), ('C programming', 'C P'), ('Java programming', 'J P'), ('C# programming', 'Cs P'), ('C++ programming', 'Cpp P')], max_length=100)),
            ],
            options={
                'verbose_name': 'University Student',
                'verbose_name_plural': 'University Students',
                'db_table': 'uni_student',
            },
        ),
    ]
